///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace GovPilot.GovPilotRecordings.SmokeRecordings.DataViewer
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CacheTheSeqNumAndAddress recording.
    /// </summary>
    [TestModule("9aff600f-da29-487c-a3eb-4bd5278af9c9", ModuleType.Recording, 1)]
    public partial class CacheTheSeqNumAndAddress : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::GovPilot.GovPilotRepository repository.
        /// </summary>
        public static global::GovPilot.GovPilotRepository repo = global::GovPilot.GovPilotRepository.Instance;

        static CacheTheSeqNumAndAddress instance = new CacheTheSeqNumAndAddress();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CacheTheSeqNumAndAddress()
        {
            Address = "";
            RefNumOnGrid = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CacheTheSeqNumAndAddress Instance
        {
            get { return instance; }
        }

#region Variables

        string _Address;

        /// <summary>
        /// Gets or sets the value of variable Address.
        /// </summary>
        [TestVariable("a97d39a4-20c8-4f33-a724-32768dec4742")]
        public string Address
        {
            get { return _Address; }
            set { _Address = value; }
        }

        string _RefNumOnGrid;

        /// <summary>
        /// Gets or sets the value of variable RefNumOnGrid.
        /// </summary>
        [TestVariable("034797d6-702b-4c0f-88f7-3053ccbbc1a9")]
        public string RefNumOnGrid
        {
            get { return _RefNumOnGrid; }
            set { _RefNumOnGrid = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.DataViewerGrid.CellPropertyTaxAddress' and assigning its value to variable 'Address'.", repo.ApplicationUnderTest.DataViewerGrid.CellPropertyTaxAddressInfo, new RecordItemIndex(0));
            Address = repo.ApplicationUnderTest.DataViewerGrid.CellPropertyTaxAddress.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", Address, new RecordItemIndex(1));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.DataViewerGrid.RefNumOnGrid' and assigning its value to variable 'RefNumOnGrid'.", repo.ApplicationUnderTest.DataViewerGrid.RefNumOnGridInfo, new RecordItemIndex(2));
            RefNumOnGrid = repo.ApplicationUnderTest.DataViewerGrid.RefNumOnGrid.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", RefNumOnGrid, new RecordItemIndex(3));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
