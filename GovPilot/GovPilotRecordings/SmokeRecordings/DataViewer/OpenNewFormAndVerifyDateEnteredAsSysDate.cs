///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace GovPilot.GovPilotRecordings.SmokeRecordings.DataViewer
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The OpenNewFormAndVerifyDateEnteredAsSysDate recording.
    /// </summary>
    [TestModule("1298c736-d109-4147-b0d2-e7e00700ff95", ModuleType.Recording, 1)]
    public partial class OpenNewFormAndVerifyDateEnteredAsSysDate : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::GovPilot.GovPilotRepository repository.
        /// </summary>
        public static global::GovPilot.GovPilotRepository repo = global::GovPilot.GovPilotRepository.Instance;

        static OpenNewFormAndVerifyDateEnteredAsSysDate instance = new OpenNewFormAndVerifyDateEnteredAsSysDate();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public OpenNewFormAndVerifyDateEnteredAsSysDate()
        {
            DateAssigned = "";
            RefNumAssigned = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static OpenNewFormAndVerifyDateEnteredAsSysDate Instance
        {
            get { return instance; }
        }

#region Variables

        string _DateAssigned;

        /// <summary>
        /// Gets or sets the value of variable DateAssigned.
        /// </summary>
        [TestVariable("2123bb50-f4e5-4f8f-945c-77c473a8a475")]
        public string DateAssigned
        {
            get { return _DateAssigned; }
            set { _DateAssigned = value; }
        }

        string _RefNumAssigned;

        /// <summary>
        /// Gets or sets the value of variable RefNumAssigned.
        /// </summary>
        [TestVariable("e56fcda4-7bc0-4881-8dd1-933417c9ac09")]
        public string RefNumAssigned
        {
            get { return _RefNumAssigned; }
            set { _RefNumAssigned = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(0));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.IconViewForm' at Center.", repo.ApplicationUnderTest.HomePage.IconViewFormInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.HomePage.IconViewForm.Click();
            Delay.Milliseconds(0);
            
            // Fetching the Date Assigned to the record on the form screen for further comparison
            Report.Log(ReportLevel.Info, "Get Value", "Fetching the Date Assigned to the record on the form screen for further comparison\r\nGetting attribute 'InnerText' from item 'ApplicationUnderTest.ViewFormPage.TxtDateEnteredField' and assigning its value to variable 'DateAssigned'.", repo.ApplicationUnderTest.ViewFormPage.TxtDateEnteredFieldInfo, new RecordItemIndex(2));
            DateAssigned = repo.ApplicationUnderTest.ViewFormPage.TxtDateEnteredField.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", DateAssigned, new RecordItemIndex(3));
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'TxtAutoGenReferenceNum' and assigning its value to variable 'RefNumAssigned'.", repo.TxtAutoGenReferenceNumInfo, new RecordItemIndex(4));
            RefNumAssigned = repo.TxtAutoGenReferenceNum.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", RefNumAssigned, new RecordItemIndex(5));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.LogsScreen.BtnLog' at Center.", repo.ApplicationUnderTest.LogsScreen.BtnLogInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.LogsScreen.BtnLog.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(7));
            Delay.Duration(2000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
