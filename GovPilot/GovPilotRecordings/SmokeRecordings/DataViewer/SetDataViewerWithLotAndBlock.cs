///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace GovPilot.GovPilotRecordings.SmokeRecordings.DataViewer
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SetDataViewerWithLotAndBlock recording.
    /// </summary>
    [TestModule("ff78f0a1-2cec-4690-94ff-43314b3f66e1", ModuleType.Recording, 1)]
    public partial class SetDataViewerWithLotAndBlock : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::GovPilot.GovPilotRepository repository.
        /// </summary>
        public static global::GovPilot.GovPilotRepository repo = global::GovPilot.GovPilotRepository.Instance;

        static SetDataViewerWithLotAndBlock instance = new SetDataViewerWithLotAndBlock();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SetDataViewerWithLotAndBlock()
        {
            DateEnteredView = "yourtext";
            Block = "yourtext";
            ViewName = "yourtext";
            Lot = "yourtext";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SetDataViewerWithLotAndBlock Instance
        {
            get { return instance; }
        }

#region Variables

        string _Block;

        /// <summary>
        /// Gets or sets the value of variable Block.
        /// </summary>
        [TestVariable("4b4a9247-e05b-4d7a-8914-f91f450d20cb")]
        public string Block
        {
            get { return _Block; }
            set { _Block = value; }
        }

        string _ViewName;

        /// <summary>
        /// Gets or sets the value of variable ViewName.
        /// </summary>
        [TestVariable("e7bb5a47-0725-4037-b268-090cddf52e06")]
        public string ViewName
        {
            get { return _ViewName; }
            set { _ViewName = value; }
        }

        string _Lot;

        /// <summary>
        /// Gets or sets the value of variable Lot.
        /// </summary>
        [TestVariable("d74c3048-6d12-4b76-b612-c2b74939dbfa")]
        public string Lot
        {
            get { return _Lot; }
            set { _Lot = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DateEnteredView.
        /// </summary>
        [TestVariable("22a24c7a-6ec1-4e05-b853-9b4a7dca7bcd")]
        public string DateEnteredView
        {
            get { return repo.DateEnteredView; }
            set { repo.DateEnteredView = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3s.", new RecordItemIndex(0));
            Delay.Duration(3000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.BtnSaveAs' at Center.", repo.ApplicationUnderTest.HomePage.BtnSaveAsInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.HomePage.BtnSaveAs.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.TxtEnterViewName' at Center.", repo.ApplicationUnderTest.HomePage.TxtEnterViewNameInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.HomePage.TxtEnterViewName.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'ApplicationUnderTest.HomePage.TxtEnterViewName'.", repo.ApplicationUnderTest.HomePage.TxtEnterViewNameInfo, new RecordItemIndex(3));
            Keyboard.PrepareFocus(repo.ApplicationUnderTest.HomePage.TxtEnterViewName);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ViewName' with focus on 'ApplicationUnderTest.HomePage.TxtEnterViewName'.", repo.ApplicationUnderTest.HomePage.TxtEnterViewNameInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.HomePage.TxtEnterViewName.PressKeys(ViewName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.Save' at Center.", repo.ApplicationUnderTest.HomePage.SaveInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.HomePage.Save.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'ApplicationUnderTest.HomePage.LinkViewNameCreated'.", repo.ApplicationUnderTest.HomePage.LinkViewNameCreatedInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.HomePage.LinkViewNameCreated.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'ApplicationUnderTest.HomePage.LinkViewNameCreated'.", repo.ApplicationUnderTest.HomePage.LinkViewNameCreatedInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.HomePage.LinkViewNameCreated.PerformClick();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 4s.", new RecordItemIndex(8));
            Delay.Duration(4000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.BtnFields' at Center.", repo.ApplicationUnderTest.HomePage.BtnFieldsInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.HomePage.BtnFields.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.HideAll' at Center.", repo.ApplicationUnderTest.HomePage.HideAllInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.HomePage.HideAll.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.TxtFindField' at Center.", repo.ApplicationUnderTest.HomePage.TxtFindFieldInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.HomePage.TxtFindField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Lot' with focus on 'ApplicationUnderTest.HomePage.TxtFindField'.", repo.ApplicationUnderTest.HomePage.TxtFindFieldInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.HomePage.TxtFindField.PressKeys(Lot);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(13));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ViewProperty.LinkLot1' at Center.", repo.ApplicationUnderTest.ViewProperty.LinkLot1Info, new RecordItemIndex(14));
            repo.ApplicationUnderTest.ViewProperty.LinkLot1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.TxtFindField' at Center.", repo.ApplicationUnderTest.HomePage.TxtFindFieldInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.HomePage.TxtFindField.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Block' with focus on 'ApplicationUnderTest.HomePage.TxtFindField'.", repo.ApplicationUnderTest.HomePage.TxtFindFieldInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.HomePage.TxtFindField.PressKeys(Block);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(17));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ViewProperty.LinkBlock1' at Center.", repo.ApplicationUnderTest.ViewProperty.LinkBlock1Info, new RecordItemIndex(18));
            repo.ApplicationUnderTest.ViewProperty.LinkBlock1.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuppliClickObject' at Center.", repo.SuppliClickObjectInfo, new RecordItemIndex(19));
            repo.SuppliClickObject.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
