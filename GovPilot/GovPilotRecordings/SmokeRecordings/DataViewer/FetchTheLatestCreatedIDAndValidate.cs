///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace GovPilot.GovPilotRecordings.SmokeRecordings.DataViewer
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The FetchTheLatestCreatedIDAndValidate recording.
    /// </summary>
    [TestModule("573a8527-d1ac-491a-9d65-f1cec520ac08", ModuleType.Recording, 1)]
    public partial class FetchTheLatestCreatedIDAndValidate : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::GovPilot.GovPilotRepository repository.
        /// </summary>
        public static global::GovPilot.GovPilotRepository repo = global::GovPilot.GovPilotRepository.Instance;

        static FetchTheLatestCreatedIDAndValidate instance = new FetchTheLatestCreatedIDAndValidate();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public FetchTheLatestCreatedIDAndValidate()
        {
            LatestRecID = "";
            RecIDAfterSort = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static FetchTheLatestCreatedIDAndValidate Instance
        {
            get { return instance; }
        }

#region Variables

        string _LatestRecID;

        /// <summary>
        /// Gets or sets the value of variable LatestRecID.
        /// </summary>
        [TestVariable("3ce92c1a-856c-4620-9129-6efc3407ae44")]
        public string LatestRecID
        {
            get { return _LatestRecID; }
            set { _LatestRecID = value; }
        }

        string _RecIDAfterSort;

        /// <summary>
        /// Gets or sets the value of variable RecIDAfterSort.
        /// </summary>
        [TestVariable("70dc3685-2169-4882-bbb9-f68c0a6be118")]
        public string RecIDAfterSort
        {
            get { return _RecIDAfterSort; }
            set { _RecIDAfterSort = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            MergedUserCodeMethod(repo.ApplicationUnderTest.DataViewerGrid.TDTopMostRecordIDInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", LatestRecID, new RecordItemIndex(1));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
