///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace GovPilot.GovPilotRecordings.SmokeRecordings.DataViewer
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The LaunchAndViewTheRecord recording.
    /// </summary>
    [TestModule("72435066-0054-4deb-a579-61eac9647c09", ModuleType.Recording, 1)]
    public partial class LaunchAndViewTheRecord : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::GovPilot.GovPilotRepository repository.
        /// </summary>
        public static global::GovPilot.GovPilotRepository repo = global::GovPilot.GovPilotRepository.Instance;

        static LaunchAndViewTheRecord instance = new LaunchAndViewTheRecord();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public LaunchAndViewTheRecord()
        {
            CachedAutoReferenceNum = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static LaunchAndViewTheRecord Instance
        {
            get { return instance; }
        }

#region Variables

        string _CachedAutoReferenceNum;

        /// <summary>
        /// Gets or sets the value of variable CachedAutoReferenceNum.
        /// </summary>
        [TestVariable("0fe53f2a-06b0-4d88-a913-3fa314b49ad4")]
        public string CachedAutoReferenceNum
        {
            get { return _CachedAutoReferenceNum; }
            set { _CachedAutoReferenceNum = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.IconViewForm' at Center.", repo.ApplicationUnderTest.HomePage.IconViewFormInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.HomePage.IconViewForm.Click();
            Delay.Milliseconds(0);
            
            // Validating that view screen has launched
            Report.Log(ReportLevel.Info, "Validation", "Validating that view screen has launched\r\nValidating AttributeEqual (Visible='True') on item 'TxtAutoGenReferenceNum'.", repo.TxtAutoGenReferenceNumInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.TxtAutoGenReferenceNumInfo, "Visible", "True");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagValue' from item 'TxtAutoGenReferenceNum' and assigning its value to variable 'CachedAutoReferenceNum'.", repo.TxtAutoGenReferenceNumInfo, new RecordItemIndex(2));
            CachedAutoReferenceNum = repo.TxtAutoGenReferenceNum.Element.GetAttributeValueText("TagValue");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", CachedAutoReferenceNum, new RecordItemIndex(3));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
