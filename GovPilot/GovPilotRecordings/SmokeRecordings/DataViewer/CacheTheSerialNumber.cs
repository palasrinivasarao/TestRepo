///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace GovPilot.GovPilotRecordings.SmokeRecordings.DataViewer
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CacheTheSerialNumber recording.
    /// </summary>
    [TestModule("bffadfc3-65bc-4e4a-ac6c-57bcfcfa42f2", ModuleType.Recording, 1)]
    public partial class CacheTheSerialNumber : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::GovPilot.GovPilotRepository repository.
        /// </summary>
        public static global::GovPilot.GovPilotRepository repo = global::GovPilot.GovPilotRepository.Instance;

        static CacheTheSerialNumber instance = new CacheTheSerialNumber();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CacheTheSerialNumber()
        {
            ModuleName = "yourtext";
            SerialNumGenerated = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CacheTheSerialNumber Instance
        {
            get { return instance; }
        }

#region Variables

        string _ModuleName;

        /// <summary>
        /// Gets or sets the value of variable ModuleName.
        /// </summary>
        [TestVariable("fcdb6ef6-ac1a-4930-af07-e8379a83b1ec")]
        public string ModuleName
        {
            get { return _ModuleName; }
            set { _ModuleName = value; }
        }

        string _SerialNumGenerated;

        /// <summary>
        /// Gets or sets the value of variable SerialNumGenerated.
        /// </summary>
        [TestVariable("1fa601ba-fcb7-44a6-98a8-82ac47a003d3")]
        public string SerialNumGenerated
        {
            get { return _SerialNumGenerated; }
            set { _SerialNumGenerated = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(0));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.BtnAccountSettings' at Center.", repo.ApplicationUnderTest.HomePage.BtnAccountSettingsInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.HomePage.BtnAccountSettings.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.LnkModuleConfiguration' at Center.", repo.ApplicationUnderTest.HomePage.LnkModuleConfigurationInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.HomePage.LnkModuleConfiguration.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.InputSearch' at Center.", repo.ApplicationUnderTest.HomePage.InputSearchInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.HomePage.InputSearch.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'ApplicationUnderTest.HomePage.InputSearch'.", repo.ApplicationUnderTest.HomePage.InputSearchInfo, new RecordItemIndex(4));
            Keyboard.PrepareFocus(repo.ApplicationUnderTest.HomePage.InputSearch);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ModuleName' with focus on 'ApplicationUnderTest.HomePage.InputSearch'.", repo.ApplicationUnderTest.HomePage.InputSearchInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.HomePage.InputSearch.PressKeys(ModuleName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(6));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.ATagDogLicense' at Center.", repo.ApplicationUnderTest.HomePage.ATagDogLicenseInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.HomePage.ATagDogLicense.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.TabSerialNumbers' at Center.", repo.ApplicationUnderTest.HomePage.TabSerialNumbersInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.HomePage.TabSerialNumbers.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'ApplicationUnderTest.HomePage.SerilaNumberValue' and assigning its value to variable 'SerialNumGenerated'.", repo.ApplicationUnderTest.HomePage.SerilaNumberValueInfo, new RecordItemIndex(9));
            SerialNumGenerated = repo.ApplicationUnderTest.HomePage.SerilaNumberValue.Element.GetAttributeValueText("InnerText");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", SerialNumGenerated, new RecordItemIndex(10));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(11));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.IconModules' at 4;4.", repo.ApplicationUnderTest.HomePage.IconModulesInfo, new RecordItemIndex(12));
            repo.ApplicationUnderTest.HomePage.IconModules.Click(new Location(IconModules_Screenshot1, "4;4", IconModules_Screenshot1_Options));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        CompressedImage IconModules_Screenshot1
        { get { return repo.ApplicationUnderTest.HomePage.IconModulesInfo.GetScreenshot1(new Rectangle(26, 41, 8, 8)); } }

        /// <summary>
        /// DO NOT REFERENCE THIS CODE  - auto generated
        /// </summary>
        Imaging.FindOptions IconModules_Screenshot1_Options
        { get { return Imaging.FindOptions.Default; } }

#endregion
    }
#pragma warning restore 0436
}
