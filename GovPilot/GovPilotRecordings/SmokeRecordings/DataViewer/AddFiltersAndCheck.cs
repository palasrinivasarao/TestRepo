///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace GovPilot.GovPilotRecordings.SmokeRecordings.DataViewer
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The AddFiltersAndCheck recording.
    /// </summary>
    [TestModule("6b5bc2e2-28fc-4496-8c09-b3d0c7dcd2f3", ModuleType.Recording, 1)]
    public partial class AddFiltersAndCheck : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::GovPilot.GovPilotRepository repository.
        /// </summary>
        public static global::GovPilot.GovPilotRepository repo = global::GovPilot.GovPilotRepository.Instance;

        static AddFiltersAndCheck instance = new AddFiltersAndCheck();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public AddFiltersAndCheck()
        {
            Number = "yourtext";
            StartingRecordIDAfterFilter = "101";
            AppAddress = "yourtext";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static AddFiltersAndCheck Instance
        {
            get { return instance; }
        }

#region Variables

        string _Number;

        /// <summary>
        /// Gets or sets the value of variable Number.
        /// </summary>
        [TestVariable("7a0ddd62-96e5-425d-bf3b-11cf15d62841")]
        public string Number
        {
            get { return _Number; }
            set { _Number = value; }
        }

        string _StartingRecordIDAfterFilter;

        /// <summary>
        /// Gets or sets the value of variable StartingRecordIDAfterFilter.
        /// </summary>
        [TestVariable("f79404f8-e4d6-4450-b58b-e129e6ef2bdd")]
        public string StartingRecordIDAfterFilter
        {
            get { return _StartingRecordIDAfterFilter; }
            set { _StartingRecordIDAfterFilter = value; }
        }

        string _AppAddress;

        /// <summary>
        /// Gets or sets the value of variable AppAddress.
        /// </summary>
        [TestVariable("756b7dc6-8f4a-496a-b37f-adf0eade3a9a")]
        public string AppAddress
        {
            get { return _AppAddress; }
            set { _AppAddress = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DataViewerGrid.BtnFIlters' at Center.", repo.ApplicationUnderTest.DataViewerGrid.BtnFIltersInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.DataViewerGrid.BtnFIlters.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DataViewerGrid.BtnAddFilter' at Center.", repo.ApplicationUnderTest.DataViewerGrid.BtnAddFilterInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.DataViewerGrid.BtnAddFilter.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DataViewerGrid.DrpDwnFIlter' at Center.", repo.ApplicationUnderTest.DataViewerGrid.DrpDwnFIlterInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.DataViewerGrid.DrpDwnFIlter.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down}{Enter}'.", new RecordItemIndex(3));
            Keyboard.Press("{Down}{Enter}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DataViewerGrid.DrpDwnConditionalOp' at Center.", repo.ApplicationUnderTest.DataViewerGrid.DrpDwnConditionalOpInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.DataViewerGrid.DrpDwnConditionalOp.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down 2}{Enter}'.", new RecordItemIndex(5));
            Keyboard.Press("{Down 2}{Enter}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(6));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DataViewerGrid.InputNumber' at Center.", repo.ApplicationUnderTest.DataViewerGrid.InputNumberInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.DataViewerGrid.InputNumber.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Number' with focus on 'ApplicationUnderTest.DataViewerGrid.InputNumber'.", repo.ApplicationUnderTest.DataViewerGrid.InputNumberInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.DataViewerGrid.InputNumber.PressKeys(Number);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>$StartingRecordIDAfterFilter) on item 'ApplicationUnderTest.DataViewerGrid.TDTopMostRecordID'.", repo.ApplicationUnderTest.DataViewerGrid.TDTopMostRecordIDInfo, new RecordItemIndex(9));
            Validate.AttributeContains(repo.ApplicationUnderTest.DataViewerGrid.TDTopMostRecordIDInfo, "InnerText", StartingRecordIDAfterFilter);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuppliClickObject' at Center.", repo.SuppliClickObjectInfo, new RecordItemIndex(10));
            repo.SuppliClickObject.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>$StartingRecordIDAfterFilter) on item 'ApplicationUnderTest.DataViewerGrid.TDTopMostRecordID'.", repo.ApplicationUnderTest.DataViewerGrid.TDTopMostRecordIDInfo, new RecordItemIndex(11));
            Validate.AttributeContains(repo.ApplicationUnderTest.DataViewerGrid.TDTopMostRecordIDInfo, "InnerText", StartingRecordIDAfterFilter);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(12));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DataViewerGrid.BtnFIlters' at Center.", repo.ApplicationUnderTest.DataViewerGrid.BtnFIltersInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.DataViewerGrid.BtnFIlters.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DataViewerGrid.BtnAddFilter' at Center.", repo.ApplicationUnderTest.DataViewerGrid.BtnAddFilterInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.DataViewerGrid.BtnAddFilter.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DataViewerGrid.DrpDwnFilterSecond' at Center.", repo.ApplicationUnderTest.DataViewerGrid.DrpDwnFilterSecondInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.DataViewerGrid.DrpDwnFilterSecond.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down 6}{Enter}'.", new RecordItemIndex(16));
            Keyboard.Press("{Down 6}{Enter}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DataViewerGrid.DrpDwnConditionalOpsec' at Center.", repo.ApplicationUnderTest.DataViewerGrid.DrpDwnConditionalOpsecInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.DataViewerGrid.DrpDwnConditionalOpsec.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Up 2}{Enter}'.", new RecordItemIndex(18));
            Keyboard.Press("{Up 2}{Enter}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$AppAddress' with focus on 'ApplicationUnderTest.DataViewerGrid.InputAddressValue'.", repo.ApplicationUnderTest.DataViewerGrid.InputAddressValueInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.DataViewerGrid.InputAddressValue.PressKeys(AppAddress);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SuppliClickObject' at Center.", repo.SuppliClickObjectInfo, new RecordItemIndex(20));
            repo.SuppliClickObject.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(21));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>$AppAddress) on item 'ApplicationUnderTest.DataViewerGrid.TDTopMostAddress'.", repo.ApplicationUnderTest.DataViewerGrid.TDTopMostAddressInfo, new RecordItemIndex(22));
            Validate.AttributeContains(repo.ApplicationUnderTest.DataViewerGrid.TDTopMostAddressInfo, "InnerText", AppAddress);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
