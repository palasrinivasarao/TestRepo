///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace GovPilot.GovPilotRecordings.SmokeRecordings.Homescreen
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CreateViewFour recording.
    /// </summary>
    [TestModule("bf4dcac8-b147-4bd9-9d5a-d1669140470b", ModuleType.Recording, 1)]
    public partial class CreateViewFour : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::GovPilot.GovPilotRepository repository.
        /// </summary>
        public static global::GovPilot.GovPilotRepository repo = global::GovPilot.GovPilotRepository.Instance;

        static CreateViewFour instance = new CreateViewFour();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateViewFour()
        {
            Value = "";
            FilterValue = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateViewFour Instance
        {
            get { return instance; }
        }

#region Variables

        string _Value;

        /// <summary>
        /// Gets or sets the value of variable Value.
        /// </summary>
        [TestVariable("d2b1e7bf-b41e-4715-a403-8de399a4b471")]
        public string Value
        {
            get { return _Value; }
            set { _Value = value; }
        }

        string _FilterValue;

        /// <summary>
        /// Gets or sets the value of variable FilterValue.
        /// </summary>
        [TestVariable("6fd0c4be-bdce-4dcc-91ef-02e56aa69fb0")]
        public string FilterValue
        {
            get { return _FilterValue; }
            set { _FilterValue = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.DogLicensePage.Txt_ViewName_All'", repo.ApplicationUnderTest.DogLicensePage.Txt_ViewName_AllInfo, new ActionTimeout(10000), new RecordItemIndex(0));
            repo.ApplicationUnderTest.DogLicensePage.Txt_ViewName_AllInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s for the attribute 'Enabled' to equal the specified value 'True'. Associated repository item: 'ApplicationUnderTest.DogLicensePage.Txt_ViewName_All'", repo.ApplicationUnderTest.DogLicensePage.Txt_ViewName_AllInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.DogLicensePage.Txt_ViewName_AllInfo.WaitForAttributeEqual(10000, "Enabled", "True");
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.DogLicensePage.Btn_Filter'", repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo, new ActionTimeout(10000), new RecordItemIndex(2));
            repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'ApplicationUnderTest.DogLicensePage.Btn_Filter'", repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo.WaitForAttributeEqual(10000, "Visible", "True");
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s for the attribute 'Enabled' to equal the specified value 'True'. Associated repository item: 'ApplicationUnderTest.DogLicensePage.Btn_Filter'", repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo.WaitForAttributeEqual(10000, "Enabled", "True");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(5));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DogLicensePage.Btn_Filter' at Center.", repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Filter.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(7));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilter'", repo.ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilterInfo, new ActionTimeout(10000), new RecordItemIndex(8));
            repo.ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilterInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilter'", repo.ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilterInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilterInfo.WaitForAttributeEqual(10000, "Visible", "True");
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s for the attribute 'Enabled' to equal the specified value 'True'. Associated repository item: 'ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilter'", repo.ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilterInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilterInfo.WaitForAttributeEqual(5000, "Enabled", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilter' at Center.", repo.ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilterInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilter.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.DogLicensePage.Btn_Drpdown_Favourite'", repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_FavouriteInfo, new ActionTimeout(5000), new RecordItemIndex(12));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_FavouriteInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DogLicensePage.Btn_Drpdown_Favourite' at Center.", repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_FavouriteInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_Favourite.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down} ' with focus on 'ApplicationUnderTest.DogLicensePage.Btn_Drpdown_Favourite'.", repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_FavouriteInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_Favourite.PressKeys("{Down} ");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 200ms.", new RecordItemIndex(15));
            Delay.Duration(200, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Enter}' with focus on 'ApplicationUnderTest.DogLicensePage.Btn_Drpdown_Favourite'.", repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_FavouriteInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_Favourite.PressKeys("{Enter}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 200ms.", new RecordItemIndex(17));
            Delay.Duration(200, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOp'", repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOpInfo, new ActionTimeout(5000), new RecordItemIndex(18));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOpInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOp' at Center.", repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOpInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOp.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down 2} ' with focus on 'ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOp'.", repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOpInfo, new RecordItemIndex(20));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOp.PressKeys("{Down 2} ");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 200ms.", new RecordItemIndex(21));
            Delay.Duration(200, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Enter}' with focus on 'ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOp'.", repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOpInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOp.PressKeys("{Enter}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 200ms.", new RecordItemIndex(23));
            Delay.Duration(200, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.DogLicensePage.TxtBox_FilterValue'", repo.ApplicationUnderTest.DogLicensePage.TxtBox_FilterValueInfo, new ActionTimeout(5000), new RecordItemIndex(24));
            repo.ApplicationUnderTest.DogLicensePage.TxtBox_FilterValueInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FilterValue' with focus on 'ApplicationUnderTest.DogLicensePage.TxtBox_FilterValue'.", repo.ApplicationUnderTest.DogLicensePage.TxtBox_FilterValueInfo, new RecordItemIndex(25));
            repo.ApplicationUnderTest.DogLicensePage.TxtBox_FilterValue.PressKeys(FilterValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 200ms.", new RecordItemIndex(26));
            Delay.Duration(200, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Enter}' with focus on 'ApplicationUnderTest.DogLicensePage.TxtBox_FilterValue'.", repo.ApplicationUnderTest.DogLicensePage.TxtBox_FilterValueInfo, new RecordItemIndex(27));
            repo.ApplicationUnderTest.DogLicensePage.TxtBox_FilterValue.PressKeys("{Enter}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(28));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.HomePage.Btn_Filter'", repo.ApplicationUnderTest.HomePage.Btn_FilterInfo, new ActionTimeout(5000), new RecordItemIndex(29));
            repo.ApplicationUnderTest.HomePage.Btn_FilterInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DogLicensePage.Btn_Filter' at Center.", repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo, new RecordItemIndex(30));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Filter.Click();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
