///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace GovPilot.GovPilotRecordings.SmokeRecordings.Homescreen
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The EnlargedRecentRecords_Minimize recording.
    /// </summary>
    [TestModule("9f9fe3db-2a96-4953-9ef4-870fbb9faa12", ModuleType.Recording, 1)]
    public partial class EnlargedRecentRecords_Minimize : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::GovPilot.GovPilotRepository repository.
        /// </summary>
        public static global::GovPilot.GovPilotRepository repo = global::GovPilot.GovPilotRepository.Instance;

        static EnlargedRecentRecords_Minimize instance = new EnlargedRecentRecords_Minimize();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public EnlargedRecentRecords_Minimize()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static EnlargedRecentRecords_Minimize Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.RecentRecords.RecentRecords_Minimize'.", repo.ApplicationUnderTest.RecentRecords.RecentRecords_MinimizeInfo, new RecordItemIndex(0));
            Validate.Exists(repo.ApplicationUnderTest.RecentRecords.RecentRecords_MinimizeInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.RecentRecords.RecentRecords_Minimize' at Center.", repo.ApplicationUnderTest.RecentRecords.RecentRecords_MinimizeInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.RecentRecords.RecentRecords_Minimize.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.HomePage.Table_RecentRecords'", repo.ApplicationUnderTest.HomePage.Table_RecentRecordsInfo, new ActionTimeout(5000), new RecordItemIndex(2));
            repo.ApplicationUnderTest.HomePage.Table_RecentRecordsInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.HomePage.Table_RecentRecords'.", repo.ApplicationUnderTest.HomePage.Table_RecentRecordsInfo, new RecordItemIndex(3));
            Validate.Exists(repo.ApplicationUnderTest.HomePage.Table_RecentRecordsInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.HomePage.Btn_ViewMore'.", repo.ApplicationUnderTest.HomePage.Btn_ViewMoreInfo, new RecordItemIndex(4));
            Validate.Exists(repo.ApplicationUnderTest.HomePage.Btn_ViewMoreInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.Btn_ViewMore' at Center.", repo.ApplicationUnderTest.HomePage.Btn_ViewMoreInfo, new RecordItemIndex(5));
            repo.ApplicationUnderTest.HomePage.Btn_ViewMore.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2s to exist. Associated repository item: 'ApplicationUnderTest.RecentRecords.Table_RecordsContent_EnlargedView'", repo.ApplicationUnderTest.RecentRecords.Table_RecordsContent_EnlargedViewInfo, new ActionTimeout(2000), new RecordItemIndex(6));
            repo.ApplicationUnderTest.RecentRecords.Table_RecordsContent_EnlargedViewInfo.WaitForExists(2000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.RecentRecords.Table_RecordsContent_EnlargedView'.", repo.ApplicationUnderTest.RecentRecords.Table_RecordsContent_EnlargedViewInfo, new RecordItemIndex(7));
            Validate.Exists(repo.ApplicationUnderTest.RecentRecords.Table_RecordsContent_EnlargedViewInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
