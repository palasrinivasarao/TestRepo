///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace GovPilot.GovPilotRecordings.SmokeRecordings.Homescreen
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The VerifyCancelInShareTile recording.
    /// </summary>
    [TestModule("10eea7c4-3f26-4215-82d8-05277fbeba31", ModuleType.Recording, 1)]
    public partial class VerifyCancelInShareTile : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::GovPilot.GovPilotRepository repository.
        /// </summary>
        public static global::GovPilot.GovPilotRepository repo = global::GovPilot.GovPilotRepository.Instance;

        static VerifyCancelInShareTile instance = new VerifyCancelInShareTile();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public VerifyCancelInShareTile()
        {
            username = "";
            TxtOnTile = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static VerifyCancelInShareTile Instance
        {
            get { return instance; }
        }

#region Variables

        string _username;

        /// <summary>
        /// Gets or sets the value of variable username.
        /// </summary>
        [TestVariable("7e06ef6f-5b9b-4f7c-9a6d-c9c26f72499a")]
        public string username
        {
            get { return _username; }
            set { _username = value; }
        }

        string _TxtOnTile;

        /// <summary>
        /// Gets or sets the value of variable TxtOnTile.
        /// </summary>
        [TestVariable("33b6af39-2c24-4aa3-a266-b7f29104facc")]
        public string TxtOnTile
        {
            get { return _TxtOnTile; }
            set { _TxtOnTile = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'ApplicationUnderTest.HomePage.LnkModules'", repo.ApplicationUnderTest.HomePage.LnkModulesInfo, new RecordItemIndex(0));
            repo.ApplicationUnderTest.HomePage.LnkModulesInfo.WaitForAttributeEqual(60000, "Visible", "True");
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'ApplicationUnderTest.HomePage.Btn_LoggedName'", repo.ApplicationUnderTest.HomePage.Btn_LoggedNameInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.HomePage.Btn_LoggedNameInfo.WaitForAttributeEqual(5000, "Visible", "True");
            
            // Validate if the Logged In User name Matches
            Report.Log(ReportLevel.Info, "Validation", "Validate if the Logged In User name Matches\r\nValidating AttributeEqual (InnerText=$username) on item 'ApplicationUnderTest.HomePage.Btn_LoggedName'.", repo.ApplicationUnderTest.HomePage.Btn_LoggedNameInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.ApplicationUnderTest.HomePage.Btn_LoggedNameInfo, "InnerText", username);
            Delay.Milliseconds(0);
            
            // Verify the Tile is not Shared in the Other User Login
            Report.Log(ReportLevel.Info, "Section", "Verify the Tile is not Shared in the Other User Login", new RecordItemIndex(3));
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'ApplicationUnderTest.HomePage.LnkModules'", repo.ApplicationUnderTest.HomePage.LnkModulesInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.HomePage.LnkModulesInfo.WaitForAttributeEqual(30000, "Visible", "True");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(5));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText=$TxtOnTile) on item 'ApplicationUnderTest.HomePage.TxtTile_Name'.", repo.ApplicationUnderTest.HomePage.TxtTile_NameInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.ApplicationUnderTest.HomePage.TxtTile_NameInfo, "InnerText", TxtOnTile);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", "Successfully Verified the Cancel Operation In Shared Tile", new RecordItemIndex(7));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
