///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace GovPilot.GovPilotRecordings.SmokeRecordings.Homescreen
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CreateFourthView recording.
    /// </summary>
    [TestModule("2897c4a5-537a-49cc-87de-9af167abd623", ModuleType.Recording, 1)]
    public partial class CreateFourthView : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::GovPilot.GovPilotRepository repository.
        /// </summary>
        public static global::GovPilot.GovPilotRepository repo = global::GovPilot.GovPilotRepository.Instance;

        static CreateFourthView instance = new CreateFourthView();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CreateFourthView()
        {
            ViewName4 = "";
            RecordIDValue = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CreateFourthView Instance
        {
            get { return instance; }
        }

#region Variables

        string _ViewName4;

        /// <summary>
        /// Gets or sets the value of variable ViewName4.
        /// </summary>
        [TestVariable("e0770398-e76a-4c43-89a2-127f1708e239")]
        public string ViewName4
        {
            get { return _ViewName4; }
            set { _ViewName4 = value; }
        }

        string _RecordIDValue;

        /// <summary>
        /// Gets or sets the value of variable RecordIDValue.
        /// </summary>
        [TestVariable("87b5d4f5-d1f2-43f2-b53e-c30c5a145e24")]
        public string RecordIDValue
        {
            get { return _RecordIDValue; }
            set { _RecordIDValue = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.DogLicensePage.Txt_ViewName_All'", repo.ApplicationUnderTest.DogLicensePage.Txt_ViewName_AllInfo, new ActionTimeout(10000), new RecordItemIndex(0));
            repo.ApplicationUnderTest.DogLicensePage.Txt_ViewName_AllInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s for the attribute 'Enabled' to equal the specified value 'True'. Associated repository item: 'ApplicationUnderTest.DogLicensePage.Txt_ViewName_All'", repo.ApplicationUnderTest.DogLicensePage.Txt_ViewName_AllInfo, new RecordItemIndex(1));
            repo.ApplicationUnderTest.DogLicensePage.Txt_ViewName_AllInfo.WaitForAttributeEqual(10000, "Enabled", "True");
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.DogLicensePage.Btn_Filter'", repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo, new ActionTimeout(10000), new RecordItemIndex(2));
            repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'ApplicationUnderTest.DogLicensePage.Btn_Filter'", repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo.WaitForAttributeEqual(10000, "Visible", "True");
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s for the attribute 'Enabled' to equal the specified value 'True'. Associated repository item: 'ApplicationUnderTest.DogLicensePage.Btn_Filter'", repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo.WaitForAttributeEqual(10000, "Enabled", "True");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(5));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DogLicensePage.Btn_Filter' at Center.", repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Filter.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(7));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilter'", repo.ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilterInfo, new ActionTimeout(10000), new RecordItemIndex(8));
            repo.ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilterInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s for the attribute 'Visible' to equal the specified value 'True'. Associated repository item: 'ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilter'", repo.ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilterInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilterInfo.WaitForAttributeEqual(10000, "Visible", "True");
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s for the attribute 'Enabled' to equal the specified value 'True'. Associated repository item: 'ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilter'", repo.ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilterInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilterInfo.WaitForAttributeEqual(5000, "Enabled", "True");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilter' at Center.", repo.ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilterInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.DogLicensePage.BtnIcon_AddFilter.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", "The RecordID Column Option is Selected from the Dropdown", new RecordItemIndex(12));
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.DogLicensePage.Btn_Drpdown_Favourite'", repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_FavouriteInfo, new ActionTimeout(5000), new RecordItemIndex(13));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_FavouriteInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DogLicensePage.Btn_Drpdown_Favourite' at Center.", repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_FavouriteInfo, new RecordItemIndex(14));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_Favourite.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down} ' with focus on 'ApplicationUnderTest.DogLicensePage.Btn_Drpdown_Favourite'.", repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_FavouriteInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_Favourite.PressKeys("{Down} ");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 200ms.", new RecordItemIndex(16));
            Delay.Duration(200, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Enter}' with focus on 'ApplicationUnderTest.DogLicensePage.Btn_Drpdown_Favourite'.", repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_FavouriteInfo, new RecordItemIndex(17));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_Favourite.PressKeys("{Enter}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 200ms.", new RecordItemIndex(18));
            Delay.Duration(200, false);
            
            Report.Log(ReportLevel.Info, "User", "The Relational Operator that contains the value less than 10 is selected", new RecordItemIndex(19));
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOp'", repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOpInfo, new ActionTimeout(5000), new RecordItemIndex(20));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOpInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOp' at Center.", repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOpInfo, new RecordItemIndex(21));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOp.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Down 3} ' with focus on 'ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOp'.", repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOpInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOp.PressKeys("{Down 3} ");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 200ms.", new RecordItemIndex(23));
            Delay.Duration(200, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Enter}' with focus on 'ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOp'.", repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOpInfo, new RecordItemIndex(24));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Drpdown_RelationalOp.PressKeys("{Enter}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 200ms.", new RecordItemIndex(25));
            Delay.Duration(200, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.DogLicensePage.TxtBox_FilterValue'", repo.ApplicationUnderTest.DogLicensePage.TxtBox_FilterValueInfo, new ActionTimeout(5000), new RecordItemIndex(26));
            repo.ApplicationUnderTest.DogLicensePage.TxtBox_FilterValueInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$RecordIDValue' with focus on 'ApplicationUnderTest.DogLicensePage.TxtBox_FilterValue'.", repo.ApplicationUnderTest.DogLicensePage.TxtBox_FilterValueInfo, new RecordItemIndex(27));
            repo.ApplicationUnderTest.DogLicensePage.TxtBox_FilterValue.PressKeys(RecordIDValue);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 200ms.", new RecordItemIndex(28));
            Delay.Duration(200, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Enter}' with focus on 'ApplicationUnderTest.DogLicensePage.TxtBox_FilterValue'.", repo.ApplicationUnderTest.DogLicensePage.TxtBox_FilterValueInfo, new RecordItemIndex(29));
            repo.ApplicationUnderTest.DogLicensePage.TxtBox_FilterValue.PressKeys("{Enter}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(30));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.DogLicensePage.Btn_Filter'", repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo, new ActionTimeout(5000), new RecordItemIndex(31));
            repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DogLicensePage.Btn_Filter' at Center.", repo.ApplicationUnderTest.DogLicensePage.Btn_FilterInfo, new RecordItemIndex(32));
            repo.ApplicationUnderTest.DogLicensePage.Btn_Filter.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", "The Records are filtered based on the Record ID column where its value is less than 10", new RecordItemIndex(33));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(34));
            Delay.Duration(500, false);
            
            HelperClass.SaveView(ViewName4);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "User", "Saved Fourth View successfully post filteration of records where the RecordID is less than 10", new RecordItemIndex(36));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 300ms.", new RecordItemIndex(37));
            Delay.Duration(300, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
